 
cpldfit:  version I.31                              Xilinx Inc.
                                  No Fit Report
Design Name: demo                                Date:  7-23-2014,  1:47PM
Device Used: XC2C64A-5-VQ100
Fitting Status: Design Rule Checking Failed

**************************  Errors and Warnings  ***************************

ERROR:Cpld:1063 - Design requires at least 94 macrocells, exceeds device limit
   64.
ERROR:Cpld:1062 - Design contains 261 unique product terms, exceeds device limit
   224.
ERROR:Cpld:1064 - Design rules checking error. Fitting process stopped.
ERROR:Cpld:868 - Cannot fit the design into any of the specified devices with
   the selected implementation options.
*************************  Mapped Resource Summary  **************************

No logic has been mapped.

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
0  /64  (  0%) 0   /224  (  0%) 0   /160  (  0%) 0  /64  (  0%) 0  /64  (  0%)

** Function Block Resources **

Function Mcells   FB Inps  Pterms   IO       CTC      CTR      CTS      CTE     
Block    Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot
FB1       0/16      0/40     0/56     0/16    0/1      0/1      0/1      0/1
FB2       0/16      0/40     0/56     0/16    0/1      0/1      0/1      0/1
FB3       0/16      0/40     0/56     0/16    0/1      0/1      0/1      0/1
FB4       0/16      0/40     0/56     0/16    0/1      0/1      0/1      0/1
         -----    -------  -------   -----    ---      ---      ---      ---
Total     0/64      0/160    0/224    0/64    0/4      0/4      0/4      0/4 

CTC - Control Term Clock
CTR - Control Term Reset
CTS - Control Term Set
CTE - Control Term Output Enable

* - Resource is exhausted

** Global Control Resources **

GCK         GSR         GTS         
Used/Tot    Used/Tot    Used/Tot    
0/3         0/1         0/4


** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :    2           0    |  I/O              :     0     56
Output        :    9           0    |  GCK/IO           :     0      3
Bidirectional :    0           0    |  GTS/IO           :     0      4
GCK           :    0           0    |  GSR/IO           :     0      1
GTS           :    0           0    |  
GSR           :    0           0    |  
                 ----        ----
        Total     11           0

End of Mapped Resource Summary
*************************  Summary of UnMapped Logic  ************************

** 9 Outputs **

Signal                                                                  Total Total I/O      User
Name                                                                    Pts   Inps  STD      Assignment
clk_enable                                                              0     0     LVCMOS18 P70
output<0>                                                               4     9     LVCMOS18 P1
output<1>                                                               4     6     LVCMOS18 P2
output<2>                                                               3     4     LVCMOS18 P3
output<3>                                                               3     4     LVCMOS18 P4
output<4>                                                               3     4     LVCMOS18 P6
output<5>                                                               4     6     LVCMOS18 P7
output<6>                                                               3     4     LVCMOS18 P8
output<7>                                                               4     6     LVCMOS18 P9

** 85 Buried Nodes **

Signal                                                                  Total Total User
Name                                                                    Pts   Inps  Assignment
N_PZ_725                                                                2     3     
N_PZ_730                                                                2     3     
N_PZ_731                                                                1     3     
N_PZ_732                                                                1     3     
N_PZ_733                                                                1     2     
N_PZ_734                                                                3     7     
N_PZ_800                                                                3     4     
N_PZ_828                                                                2     3     
N_PZ_831                                                                2     2     
N_PZ_838                                                                3     5     
N_PZ_844                                                                2     3     
N_PZ_846                                                                2     3     
N_PZ_847                                                                1     4     
N_PZ_872                                                                2     3     
N_PZ_877                                                                2     3     
N_PZ_879                                                                1     3     
address<0>                                                              4     6     
address<1>                                                              3     6     
address<2>                                                              3     4     
address<3>                                                              3     5     
address<4>                                                              3     7     
address<5>                                                              3     4     
address<6>                                                              3     5     
address<7>                                                              3     6     
instruction<0>                                                          3     9     
instruction<10>                                                         3     9     
instruction<11>                                                         2     9     
instruction<12>                                                         2     9     
instruction<13>                                                         2     9     
instruction<15>                                                         3     9     
processor/ALU_result<7>                                                 3     7     
processor/T_state                                                       2     3     
processor/arithmetic_carry                                              7     8     
processor/arithmetic_group/add_sub_module/carry_chain<1>                3     5     
processor/arithmetic_group/add_sub_module/carry_chain<3>                9     10    
processor/arithmetic_group/add_sub_module/carry_chain<5>                9     8     
processor/arithmetic_group/add_sub_module/half_addsub<1>                3     4     
processor/arithmetic_result<0>                                          3     3     
processor/arithmetic_result<1>                                          3     3     
processor/arithmetic_result<2>                                          6     6     

Signal                                                                  Total Total User
Name                                                                    Pts   Inps  Assignment
processor/arithmetic_result<3>                                          14    10    
processor/arithmetic_result<4>                                          5     6     
processor/arithmetic_result<5>                                          10    10    
processor/arithmetic_result<6>                                          6     6     
processor/arithmetic_result<7>                                          12    8     
processor/basic_control/reset_delay1                                    2     2     
processor/carry_flag                                                    7     12    
processor/data_registers/bus_width_loop[0].data_register_bit/rambit<0>  5     10    
processor/data_registers/bus_width_loop[0].data_register_bit/rambit<7>  5     10    
processor/data_registers/bus_width_loop[1].data_register_bit/rambit<0>  5     10    
processor/data_registers/bus_width_loop[1].data_register_bit/rambit<7>  5     10    
processor/data_registers/bus_width_loop[2].data_register_bit/rambit<0>  5     10    
processor/data_registers/bus_width_loop[2].data_register_bit/rambit<7>  5     10    
processor/data_registers/bus_width_loop[3].data_register_bit/rambit<0>  5     10    
processor/data_registers/bus_width_loop[3].data_register_bit/rambit<7>  5     10    
processor/data_registers/bus_width_loop[4].data_register_bit/rambit<0>  5     10    
processor/data_registers/bus_width_loop[4].data_register_bit/rambit<7>  5     10    
processor/data_registers/bus_width_loop[5].data_register_bit/rambit<0>  5     10    
processor/data_registers/bus_width_loop[5].data_register_bit/rambit<7>  5     10    
processor/data_registers/bus_width_loop[6].data_register_bit/rambit<0>  5     10    
processor/data_registers/bus_width_loop[6].data_register_bit/rambit<7>  5     10    
processor/data_registers/bus_width_loop[7].data_register_bit/rambit<0>  3     4     
processor/data_registers/bus_width_loop[7].data_register_bit/rambit<7>  3     4     
processor/internal_reset                                                2     3     
processor/logical_result<0>                                             5     9     
processor/logical_result<1>                                             3     5     
processor/logical_result<2>                                             6     8     
processor/logical_result<3>                                             3     6     
processor/logical_result<4>                                             4     6     
processor/logical_result<5>                                             4     6     
processor/logical_result<6>                                             4     6     
processor/logical_result<7>                                             4     6     
processor/reg_and_flag_enables/arith_or_logical_valid                   2     2     
processor/reg_and_flag_enables/register_write_valid                     3     4     
processor/reg_and_flag_enables/returni_or_shift_valid                   2     5     
processor/shift_and_rotate_carry                                        3     4     
processor/shift_and_rotate_result<0>                                    4     6     
processor/shift_and_rotate_result<1>                                    2     2     
processor/shift_and_rotate_result<2>                                    3     4     
processor/shift_and_rotate_result<3>                                    2     2     

Signal                                                                  Total Total User
Name                                                                    Pts   Inps  Assignment
processor/shift_and_rotate_result<4>                                    2     2     
processor/shift_and_rotate_result<5>                                    2     2     
processor/shift_and_rotate_result<6>                                    3     4     
processor/shift_and_rotate_result<7>                                    2     2     
write_strobe                                                            2     7     

** 2 Inputs **

Signal                                                                  I/O      User
Name                                                                    STD      Assignment
clk                                                                     LVCMOS18 P22
reset                                                                   LVCMOS18 

*******************************  Equations  ********************************

********** UnMapped Logic **********

** Outputs **


clk_enable <= NOT ('0');

FDCPE_output0: FDCPE port map (output(0),output_D(0),clk,'0','0','1');
output_D(0) <= NOT (((NOT N_PZ_733 AND NOT output(0))
	OR (instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[0].data_register_bit/rambit(7) AND N_PZ_733)
	OR (
	NOT processor/data_registers/bus_width_loop[0].data_register_bit/rambit(0) AND instruction(0) AND NOT instruction(12) AND 
	NOT instruction(10) AND write_strobe)));

FDCPE_output1: FDCPE port map (output(1),output_D(1),clk,'0','0','1');
output_D(1) <= NOT (((NOT N_PZ_733 AND NOT output(1))
	OR (instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[1].data_register_bit/rambit(7) AND N_PZ_733)
	OR (NOT instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[1].data_register_bit/rambit(0) AND N_PZ_733)));

FDCPE_output2: FDCPE port map (output(2),output_D(2),clk,'0','0','1');
output_D(2) <= NOT (((NOT N_PZ_828 AND N_PZ_733)
	OR (NOT N_PZ_733 AND NOT output(2))));

FDCPE_output3: FDCPE port map (output(3),output_D(3),clk,'0','0','1');
output_D(3) <= NOT (((N_PZ_872 AND N_PZ_733)
	OR (NOT N_PZ_733 AND NOT output(3))));

FDCPE_output4: FDCPE port map (output(4),output_D(4),clk,'0','0','1');
output_D(4) <= NOT (((N_PZ_844 AND N_PZ_733)
	OR (NOT N_PZ_733 AND NOT output(4))));

FDCPE_output5: FDCPE port map (output(5),output_D(5),clk,'0','0','1');
output_D(5) <= NOT (((NOT N_PZ_733 AND NOT output(5))
	OR (instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND N_PZ_733)
	OR (NOT instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0) AND N_PZ_733)));

FDCPE_output6: FDCPE port map (output(6),output_D(6),clk,'0','0','1');
output_D(6) <= NOT (((N_PZ_877 AND N_PZ_733)
	OR (NOT N_PZ_733 AND NOT output(6))));

FDCPE_output7: FDCPE port map (output(7),output_D(7),clk,'0','0','1');
output_D(7) <= NOT (((NOT N_PZ_733 AND NOT output(7))
	OR (
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND instruction(10) AND N_PZ_733)
	OR (
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND NOT instruction(10) AND N_PZ_733)));

** Buried Nodes **


N_PZ_725 <= ((
	processor/data_registers/bus_width_loop[0].data_register_bit/rambit(0) AND instruction(12))
	OR (instruction(0) AND NOT instruction(12)));


N_PZ_730 <= ((
	NOT processor/data_registers/bus_width_loop[0].data_register_bit/rambit(0) AND NOT instruction(10))
	OR (instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[0].data_register_bit/rambit(7)));


N_PZ_731 <= (processor/T_state AND NOT instruction(10) AND 
	processor/reg_and_flag_enables/register_write_valid);


N_PZ_732 <= (processor/T_state AND instruction(10) AND 
	processor/reg_and_flag_enables/register_write_valid);


N_PZ_733 <= (N_PZ_725 AND write_strobe);


N_PZ_734 <= ((processor/internal_reset)
	OR (NOT instruction(13) AND NOT processor/carry_flag AND 
	NOT processor/T_state AND instruction(15) AND instruction(12))
	OR (NOT instruction(13) AND NOT processor/T_state AND 
	instruction(15) AND instruction(12) AND NOT instruction(10)));


N_PZ_800 <= ((N_PZ_730 AND N_PZ_846)
	OR (instruction(12) AND N_PZ_725 AND NOT N_PZ_846)
	OR (NOT instruction(12) AND NOT N_PZ_725 AND NOT N_PZ_846));


N_PZ_828 <= ((instruction(10) AND 
	processor/data_registers/bus_width_loop[2].data_register_bit/rambit(7))
	OR (NOT instruction(10) AND 
	processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0)));


N_PZ_831 <= ((
	processor/data_registers/bus_width_loop[3].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0))
	OR (
	NOT processor/data_registers/bus_width_loop[3].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0)));


N_PZ_838 <= ((instruction(12) AND 
	NOT processor/data_registers/bus_width_loop[6].data_register_bit/rambit(7) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (instruction(12) AND 
	processor/data_registers/bus_width_loop[6].data_register_bit/rambit(0) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[6].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[6].data_register_bit/rambit(0)));


N_PZ_844 <= ((instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(7))
	OR (NOT instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0)));


N_PZ_846 <= N_PZ_725
	XOR (processor/carry_flag AND instruction(11));


N_PZ_847 <= (address(2) AND address(3) AND N_PZ_879 AND address(4));


N_PZ_872 <= ((instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[3].data_register_bit/rambit(7))
	OR (NOT instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0)));


N_PZ_877 <= ((instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[6].data_register_bit/rambit(7))
	OR (NOT instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[6].data_register_bit/rambit(0)));


N_PZ_879 <= (address(0) AND NOT processor/T_state AND address(1));

FDCPE_address0: FDCPE port map (address(0),address_D(0),clk,'0','0','1');
address_D(0) <= ((address(0) AND NOT N_PZ_734 AND processor/T_state)
	OR (NOT address(0) AND NOT N_PZ_734 AND NOT processor/T_state)
	OR (NOT processor/internal_reset AND instruction(0) AND 
	N_PZ_734));

FDCPE_address1: FDCPE port map (address(1),address_D(1),clk,'0','0','1');
address_D(1) <= ((NOT N_PZ_734 AND NOT N_PZ_879 AND address(1))
	OR (address(0) AND NOT N_PZ_734 AND NOT processor/T_state AND 
	NOT N_PZ_879));

FDCPE_address2: FDCPE port map (address(2),address_D(2),clk,'0','0','1');
address_D(2) <= ((address(2) AND NOT N_PZ_734 AND NOT N_PZ_879)
	OR (NOT address(2) AND NOT N_PZ_734 AND N_PZ_879));

FTCPE_address3: FTCPE port map (address(3),address_T(3),clk,'0','0','1');
address_T(3) <= ((N_PZ_734 AND address(3))
	OR (address(2) AND NOT N_PZ_734 AND N_PZ_879));

FDCPE_address4: FDCPE port map (address(4),address_D(4),clk,'0','0','1');
address_D(4) <= ((NOT N_PZ_734 AND address(4) AND NOT N_PZ_847)
	OR (address(2) AND NOT N_PZ_734 AND address(3) AND N_PZ_879 AND 
	NOT N_PZ_847));

FDCPE_address5: FDCPE port map (address(5),address_D(5),clk,'0','0','1');
address_D(5) <= ((NOT N_PZ_734 AND N_PZ_847 AND NOT address(5))
	OR (NOT N_PZ_734 AND NOT N_PZ_847 AND address(5)));

FTCPE_address6: FTCPE port map (address(6),address_T(6),clk,'0','0','1');
address_T(6) <= ((N_PZ_734 AND address(6))
	OR (NOT N_PZ_734 AND N_PZ_847 AND address(5)));

FTCPE_address7: FTCPE port map (address(7),address_T(7),clk,'0','0','1');
address_T(7) <= ((N_PZ_734 AND address(7))
	OR (NOT N_PZ_734 AND N_PZ_847 AND address(5) AND address(6)));

FDCPE_instruction0: FDCPE port map (instruction(0),instruction_D(0),clk,'0','0','1');
instruction_D(0) <= ((address(0) AND NOT address(2) AND NOT address(3) AND 
	NOT address(4) AND NOT address(5) AND NOT address(6) AND NOT address(7))
	OR (NOT address(2) AND NOT address(3) AND NOT address(1) AND 
	NOT address(4) AND NOT address(5) AND NOT address(6) AND NOT address(7)));

FDCPE_instruction10: FDCPE port map (instruction(10),instruction_D(10),clk,'0','0','1');
instruction_D(10) <= ((NOT address(0) AND NOT address(2) AND NOT address(3) AND 
	NOT address(4) AND NOT address(5) AND NOT address(6) AND NOT address(7))
	OR (NOT address(2) AND NOT address(3) AND NOT address(1) AND 
	NOT address(4) AND NOT address(5) AND NOT address(6) AND NOT address(7)));

FDCPE_instruction11: FDCPE port map (instruction(11),instruction_D(11),clk,'0','0','1');
instruction_D(11) <= (address(0) AND NOT address(2) AND NOT address(3) AND 
	NOT address(1) AND NOT address(4) AND NOT address(5) AND NOT address(6) AND 
	NOT address(7));

FDCPE_instruction12: FDCPE port map (instruction(12),instruction_D(12),clk,'0','0','1');
instruction_D(12) <= (address(0) AND NOT address(2) AND NOT address(3) AND 
	address(1) AND NOT address(4) AND NOT address(5) AND NOT address(6) AND 
	NOT address(7));

FDCPE_instruction13: FDCPE port map (instruction(13),instruction_D(13),clk,'0','0','1');
instruction_D(13) <= (NOT address(0) AND NOT address(2) AND NOT address(3) AND 
	address(1) AND NOT address(4) AND NOT address(5) AND NOT address(6) AND 
	NOT address(7));

FDCPE_instruction15: FDCPE port map (instruction(15),instruction_D(15),clk,'0','0','1');
instruction_D(15) <= ((address(0) AND NOT address(2) AND NOT address(3) AND 
	NOT address(4) AND NOT address(5) AND NOT address(6) AND NOT address(7))
	OR (NOT address(2) AND NOT address(3) AND address(1) AND 
	NOT address(4) AND NOT address(5) AND NOT address(6) AND NOT address(7)));


processor/ALU_result(7) <= ((instruction(13) AND NOT instruction(15) AND 
	processor/arithmetic_result(7))
	OR (NOT instruction(13) AND NOT instruction(15) AND 
	processor/logical_result(7))
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND 
	processor/shift_and_rotate_result(7)));

FDCPE_processor/T_state: FDCPE port map (processor/T_state,processor/T_state_D,clk,'0','0','1');
processor/T_state_D <= (NOT processor/internal_reset AND NOT processor/T_state);

FDCPE_processor/arithmetic_carry: FDCPE port map (processor/arithmetic_carry,processor/arithmetic_carry_D,clk,'0','0','1');
processor/arithmetic_carry_D <= ((instruction(12) AND NOT instruction(10) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND N_PZ_838)
	OR (
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND N_PZ_838)
	OR (instruction(12) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND instruction(10))
	OR (NOT instruction(12) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND instruction(10) AND NOT N_PZ_877 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (NOT instruction(12) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND NOT instruction(10) AND NOT N_PZ_877 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(5)));


processor/arithmetic_group/add_sub_module/carry_chain(1) <= ((
	NOT processor/arithmetic_group/add_sub_module/half_addsub(1) AND N_PZ_800)
	OR (instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[1].data_register_bit/rambit(7) AND 
	processor/arithmetic_group/add_sub_module/half_addsub(1))
	OR (NOT instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[1].data_register_bit/rambit(0) AND 
	processor/arithmetic_group/add_sub_module/half_addsub(1)));


processor/arithmetic_group/add_sub_module/carry_chain(3) <= ((instruction(12) AND NOT instruction(10) AND NOT N_PZ_800)
	OR (instruction(12) AND NOT N_PZ_872 AND 
	NOT processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0))
	OR (NOT N_PZ_872 AND N_PZ_828 AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(1))
	OR (instruction(13) AND NOT instruction(12) AND NOT N_PZ_872 AND 
	N_PZ_828)
	OR (instruction(13) AND NOT instruction(12) AND NOT N_PZ_872 AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(1))
	OR (instruction(13) AND NOT instruction(10) AND NOT N_PZ_872 AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(1))
	OR (instruction(12) AND 
	NOT processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0) AND N_PZ_828 AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(1))
	OR (instruction(12) AND N_PZ_828 AND 
	NOT processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0) AND NOT N_PZ_831)
	OR (instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(1) AND NOT N_PZ_831));


processor/arithmetic_group/add_sub_module/carry_chain(5) <= ((instruction(12) AND NOT instruction(10) AND 
	processor/arithmetic_group/add_sub_module/carry_chain(3))
	OR (instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0))
	OR (instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND NOT N_PZ_844 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(3))
	OR (NOT instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0) AND NOT N_PZ_844 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(3))
	OR (instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0) AND 
	processor/arithmetic_group/add_sub_module/carry_chain(3))
	OR (instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0) AND NOT N_PZ_844 AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0) AND 
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(7) AND 
	processor/arithmetic_group/add_sub_module/carry_chain(3))
	OR (instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0) AND 
	processor/arithmetic_group/add_sub_module/carry_chain(3)));


processor/arithmetic_group/add_sub_module/half_addsub(1) <= (instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[1].data_register_bit/rambit(7))
	XOR ((instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[1].data_register_bit/rambit(0))
	OR (NOT instruction(12) AND NOT instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[1].data_register_bit/rambit(0)));

FDCPE_processor/arithmetic_result0: FDCPE port map (processor/arithmetic_result(0),processor/arithmetic_result_D(0),clk,'0','0','1');
processor/arithmetic_result_D(0) <= ((N_PZ_730 AND N_PZ_846)
	OR (NOT N_PZ_730 AND NOT N_PZ_846));

FDCPE_processor/arithmetic_result1: FDCPE port map (processor/arithmetic_result(1),processor/arithmetic_result_D(1),clk,'0','0','1');
processor/arithmetic_result_D(1) <= ((
	processor/arithmetic_group/add_sub_module/half_addsub(1) AND NOT N_PZ_800)
	OR (
	NOT processor/arithmetic_group/add_sub_module/half_addsub(1) AND N_PZ_800));

FDCPE_processor/arithmetic_result2: FDCPE port map (processor/arithmetic_result(2),processor/arithmetic_result_D(2),clk,'0','0','1');
processor/arithmetic_result_D(2) <= processor/arithmetic_group/add_sub_module/carry_chain(1)
	XOR ((instruction(13) AND NOT instruction(12) AND N_PZ_828)
	OR (NOT instruction(13) AND NOT instruction(12) AND NOT N_PZ_828)
	OR (instruction(12) AND N_PZ_828 AND 
	NOT processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0))
	OR (instruction(12) AND NOT N_PZ_828 AND 
	processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0)));

FDCPE_processor/arithmetic_result3: FDCPE port map (processor/arithmetic_result(3),processor/arithmetic_result_D(3),clk,'0','0','1');
processor/arithmetic_result_D(3) <= (NOT instruction(12) AND N_PZ_872)
	XOR ((NOT instruction(13) AND NOT instruction(12) AND NOT N_PZ_828)
	OR (NOT instruction(13) AND NOT instruction(12) AND 
	processor/arithmetic_group/add_sub_module/carry_chain(1))
	OR (instruction(12) AND NOT instruction(10) AND 
	processor/arithmetic_group/add_sub_module/carry_chain(1))
	OR (NOT instruction(12) AND NOT N_PZ_828 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(1))
	OR (instruction(12) AND N_PZ_828 AND 
	NOT processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0) AND N_PZ_831)
	OR (instruction(12) AND NOT N_PZ_828 AND 
	processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0) AND NOT N_PZ_831)
	OR (instruction(12) AND 
	processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0) AND 
	processor/arithmetic_group/add_sub_module/carry_chain(1) AND NOT N_PZ_831)
	OR (NOT N_PZ_872 AND 
	processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0) AND NOT N_PZ_828 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(1))
	OR (
	NOT processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0) AND NOT N_PZ_828 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(1) AND NOT N_PZ_831)
	OR (instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(1) AND N_PZ_831)
	OR (instruction(12) AND N_PZ_872 AND 
	processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0) AND N_PZ_828 AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(1))
	OR (instruction(12) AND NOT N_PZ_872 AND 
	NOT processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0) AND N_PZ_828 AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(1)));

FDCPE_processor/arithmetic_result4: FDCPE port map (processor/arithmetic_result(4),processor/arithmetic_result_D(4),clk,'0','0','1');
processor/arithmetic_result_D(4) <= NOT (processor/arithmetic_group/add_sub_module/carry_chain(3)
	XOR ((NOT instruction(12) AND N_PZ_844)
	OR (N_PZ_844 AND 
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND NOT N_PZ_844 AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0))));

FDCPE_processor/arithmetic_result5: FDCPE port map (processor/arithmetic_result(5),processor/arithmetic_result_D(5),clk,'0','0','1');
processor/arithmetic_result_D(5) <= ((instruction(12) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (NOT instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (NOT N_PZ_844 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(3) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (instruction(12) AND 
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (instruction(12) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0) AND 
	processor/arithmetic_group/add_sub_module/carry_chain(3) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0) AND 
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0) AND 
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(7) AND 
	processor/arithmetic_group/add_sub_module/carry_chain(3))
	OR (instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0) AND 
	processor/arithmetic_group/add_sub_module/carry_chain(3)));

FDCPE_processor/arithmetic_result6: FDCPE port map (processor/arithmetic_result(6),processor/arithmetic_result_D(6),clk,'0','0','1');
processor/arithmetic_result_D(6) <= processor/arithmetic_group/add_sub_module/carry_chain(5)
	XOR ((NOT N_PZ_877 AND 
	processor/data_registers/bus_width_loop[6].data_register_bit/rambit(0))
	OR (instruction(12) AND N_PZ_877 AND 
	NOT processor/data_registers/bus_width_loop[6].data_register_bit/rambit(0))
	OR (NOT instruction(12) AND instruction(10) AND NOT N_PZ_877)
	OR (NOT instruction(10) AND NOT N_PZ_877 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(5)));

FDCPE_processor/arithmetic_result7: FDCPE port map (processor/arithmetic_result(7),processor/arithmetic_result_D(7),clk,'0','0','1');
processor/arithmetic_result_D(7) <= ((instruction(12) AND NOT instruction(10) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND N_PZ_838)
	OR (
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND N_PZ_838)
	OR (
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND NOT instruction(10) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (NOT instruction(12) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND instruction(10) AND N_PZ_877)
	OR (NOT instruction(12) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND instruction(10) AND 
	NOT processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (NOT instruction(12) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND NOT instruction(10) AND N_PZ_877)
	OR (instruction(12) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND instruction(10) AND NOT N_PZ_838)
	OR (instruction(12) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND instruction(10) AND NOT N_PZ_838)
	OR (NOT instruction(12) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND instruction(10) AND NOT N_PZ_877 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(5))
	OR (NOT instruction(12) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND NOT instruction(10) AND NOT N_PZ_877 AND 
	processor/arithmetic_group/add_sub_module/carry_chain(5)));

FDCPE_processor/basic_control/reset_delay1: FDCPE port map (processor/basic_control/reset_delay1,reset,clk,'0','0','1');

FDCPE_processor/carry_flag: FDCPE port map (processor/carry_flag,processor/carry_flag_D,clk,'0','0','1');
processor/carry_flag_D <= ((NOT processor/internal_reset AND processor/carry_flag AND 
	NOT processor/T_state)
	OR (NOT processor/internal_reset AND processor/carry_flag AND 
	NOT processor/reg_and_flag_enables/arith_or_logical_valid AND 
	NOT processor/reg_and_flag_enables/returni_or_shift_valid)
	OR (instruction(13) AND NOT processor/internal_reset AND 
	processor/T_state AND 
	processor/reg_and_flag_enables/arith_or_logical_valid AND NOT instruction(15) AND processor/arithmetic_carry)
	OR (instruction(13) AND NOT processor/internal_reset AND 
	processor/T_state AND NOT instruction(15) AND 
	processor/reg_and_flag_enables/returni_or_shift_valid AND processor/arithmetic_carry)
	OR (instruction(13) AND NOT processor/internal_reset AND 
	processor/T_state AND 
	processor/reg_and_flag_enables/arith_or_logical_valid AND instruction(15) AND NOT instruction(12) AND 
	NOT instruction(11) AND processor/shift_and_rotate_carry)
	OR (instruction(13) AND NOT processor/internal_reset AND 
	processor/T_state AND instruction(15) AND 
	processor/reg_and_flag_enables/returni_or_shift_valid AND NOT instruction(12) AND NOT instruction(11) AND 
	processor/shift_and_rotate_carry));

FDCPE_processor/data_registers/bus_width_loop[0].data_register_bit/rambit0: FDCPE port map (processor/data_registers/bus_width_loop[0].data_register_bit/rambit(0),processor/data_registers/bus_width_loop[0].data_register_bit/rambit_D(0),clk,'0','0','1');
processor/data_registers/bus_width_loop[0].data_register_bit/rambit_D(0) <= ((
	processor/data_registers/bus_width_loop[0].data_register_bit/rambit(0) AND NOT N_PZ_731)
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/arithmetic_result(0))
	OR (NOT instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/logical_result(0))
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND N_PZ_731 AND 
	processor/shift_and_rotate_result(0)));

FDCPE_processor/data_registers/bus_width_loop[0].data_register_bit/rambit7: FDCPE port map (processor/data_registers/bus_width_loop[0].data_register_bit/rambit(7),processor/data_registers/bus_width_loop[0].data_register_bit/rambit_D(7),clk,'0','0','1');
processor/data_registers/bus_width_loop[0].data_register_bit/rambit_D(7) <= ((
	processor/data_registers/bus_width_loop[0].data_register_bit/rambit(7) AND NOT N_PZ_732)
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_732 AND 
	processor/arithmetic_result(0))
	OR (NOT instruction(13) AND NOT instruction(15) AND 
	processor/logical_result(0) AND N_PZ_732)
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND N_PZ_732 AND 
	processor/shift_and_rotate_result(0)));

FDCPE_processor/data_registers/bus_width_loop[1].data_register_bit/rambit0: FDCPE port map (processor/data_registers/bus_width_loop[1].data_register_bit/rambit(0),processor/data_registers/bus_width_loop[1].data_register_bit/rambit_D(0),clk,'0','0','1');
processor/data_registers/bus_width_loop[1].data_register_bit/rambit_D(0) <= ((NOT N_PZ_731 AND 
	processor/data_registers/bus_width_loop[1].data_register_bit/rambit(0))
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/arithmetic_result(1))
	OR (NOT instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/logical_result(1))
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND N_PZ_731 AND 
	processor/shift_and_rotate_result(1)));

FDCPE_processor/data_registers/bus_width_loop[1].data_register_bit/rambit7: FDCPE port map (processor/data_registers/bus_width_loop[1].data_register_bit/rambit(7),processor/data_registers/bus_width_loop[1].data_register_bit/rambit_D(7),clk,'0','0','1');
processor/data_registers/bus_width_loop[1].data_register_bit/rambit_D(7) <= ((
	processor/data_registers/bus_width_loop[1].data_register_bit/rambit(7) AND NOT N_PZ_732)
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_732 AND 
	processor/arithmetic_result(1))
	OR (NOT instruction(13) AND NOT instruction(15) AND 
	processor/logical_result(1) AND N_PZ_732)
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND 
	processor/shift_and_rotate_result(1) AND N_PZ_732));

FDCPE_processor/data_registers/bus_width_loop[2].data_register_bit/rambit0: FDCPE port map (processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0),processor/data_registers/bus_width_loop[2].data_register_bit/rambit_D(0),clk,'0','0','1');
processor/data_registers/bus_width_loop[2].data_register_bit/rambit_D(0) <= ((NOT N_PZ_731 AND 
	processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0))
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/arithmetic_result(2))
	OR (NOT instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/logical_result(2))
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND N_PZ_731 AND 
	processor/shift_and_rotate_result(2)));

FDCPE_processor/data_registers/bus_width_loop[2].data_register_bit/rambit7: FDCPE port map (processor/data_registers/bus_width_loop[2].data_register_bit/rambit(7),processor/data_registers/bus_width_loop[2].data_register_bit/rambit_D(7),clk,'0','0','1');
processor/data_registers/bus_width_loop[2].data_register_bit/rambit_D(7) <= ((
	processor/data_registers/bus_width_loop[2].data_register_bit/rambit(7) AND NOT N_PZ_732)
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_732 AND 
	processor/arithmetic_result(2))
	OR (NOT instruction(13) AND NOT instruction(15) AND 
	processor/logical_result(2) AND N_PZ_732)
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND 
	processor/shift_and_rotate_result(2) AND N_PZ_732));

FDCPE_processor/data_registers/bus_width_loop[3].data_register_bit/rambit0: FDCPE port map (processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0),processor/data_registers/bus_width_loop[3].data_register_bit/rambit_D(0),clk,'0','0','1');
processor/data_registers/bus_width_loop[3].data_register_bit/rambit_D(0) <= ((NOT N_PZ_731 AND 
	processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0))
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/arithmetic_result(3))
	OR (NOT instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/logical_result(3))
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND N_PZ_731 AND 
	processor/shift_and_rotate_result(3)));

FDCPE_processor/data_registers/bus_width_loop[3].data_register_bit/rambit7: FDCPE port map (processor/data_registers/bus_width_loop[3].data_register_bit/rambit(7),processor/data_registers/bus_width_loop[3].data_register_bit/rambit_D(7),clk,'0','0','1');
processor/data_registers/bus_width_loop[3].data_register_bit/rambit_D(7) <= ((
	processor/data_registers/bus_width_loop[3].data_register_bit/rambit(7) AND NOT N_PZ_732)
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_732 AND 
	processor/arithmetic_result(3))
	OR (NOT instruction(13) AND NOT instruction(15) AND 
	processor/logical_result(3) AND N_PZ_732)
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND 
	processor/shift_and_rotate_result(3) AND N_PZ_732));

FDCPE_processor/data_registers/bus_width_loop[4].data_register_bit/rambit0: FDCPE port map (processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0),processor/data_registers/bus_width_loop[4].data_register_bit/rambit_D(0),clk,'0','0','1');
processor/data_registers/bus_width_loop[4].data_register_bit/rambit_D(0) <= ((NOT N_PZ_731 AND 
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0))
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/arithmetic_result(4))
	OR (NOT instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/logical_result(4))
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND N_PZ_731 AND 
	processor/shift_and_rotate_result(4)));

FDCPE_processor/data_registers/bus_width_loop[4].data_register_bit/rambit7: FDCPE port map (processor/data_registers/bus_width_loop[4].data_register_bit/rambit(7),processor/data_registers/bus_width_loop[4].data_register_bit/rambit_D(7),clk,'0','0','1');
processor/data_registers/bus_width_loop[4].data_register_bit/rambit_D(7) <= ((
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(7) AND NOT N_PZ_732)
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_732 AND 
	processor/arithmetic_result(4))
	OR (NOT instruction(13) AND NOT instruction(15) AND 
	processor/logical_result(4) AND N_PZ_732)
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND 
	processor/shift_and_rotate_result(4) AND N_PZ_732));

FDCPE_processor/data_registers/bus_width_loop[5].data_register_bit/rambit0: FDCPE port map (processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0),processor/data_registers/bus_width_loop[5].data_register_bit/rambit_D(0),clk,'0','0','1');
processor/data_registers/bus_width_loop[5].data_register_bit/rambit_D(0) <= ((NOT N_PZ_731 AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0))
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/arithmetic_result(5))
	OR (NOT instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/logical_result(5))
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND N_PZ_731 AND 
	processor/shift_and_rotate_result(5)));

FDCPE_processor/data_registers/bus_width_loop[5].data_register_bit/rambit7: FDCPE port map (processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7),processor/data_registers/bus_width_loop[5].data_register_bit/rambit_D(7),clk,'0','0','1');
processor/data_registers/bus_width_loop[5].data_register_bit/rambit_D(7) <= ((
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND NOT N_PZ_732)
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_732 AND 
	processor/arithmetic_result(5))
	OR (NOT instruction(13) AND NOT instruction(15) AND 
	processor/logical_result(5) AND N_PZ_732)
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND 
	processor/shift_and_rotate_result(5) AND N_PZ_732));

FDCPE_processor/data_registers/bus_width_loop[6].data_register_bit/rambit0: FDCPE port map (processor/data_registers/bus_width_loop[6].data_register_bit/rambit(0),processor/data_registers/bus_width_loop[6].data_register_bit/rambit_D(0),clk,'0','0','1');
processor/data_registers/bus_width_loop[6].data_register_bit/rambit_D(0) <= ((NOT N_PZ_731 AND 
	processor/data_registers/bus_width_loop[6].data_register_bit/rambit(0))
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/arithmetic_result(6))
	OR (NOT instruction(13) AND NOT instruction(15) AND N_PZ_731 AND 
	processor/logical_result(6))
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND N_PZ_731 AND 
	processor/shift_and_rotate_result(6)));

FDCPE_processor/data_registers/bus_width_loop[6].data_register_bit/rambit7: FDCPE port map (processor/data_registers/bus_width_loop[6].data_register_bit/rambit(7),processor/data_registers/bus_width_loop[6].data_register_bit/rambit_D(7),clk,'0','0','1');
processor/data_registers/bus_width_loop[6].data_register_bit/rambit_D(7) <= ((
	processor/data_registers/bus_width_loop[6].data_register_bit/rambit(7) AND NOT N_PZ_732)
	OR (instruction(13) AND NOT instruction(15) AND N_PZ_732 AND 
	processor/arithmetic_result(6))
	OR (NOT instruction(13) AND NOT instruction(15) AND 
	processor/logical_result(6) AND N_PZ_732)
	OR (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11) AND 
	processor/shift_and_rotate_result(6) AND N_PZ_732));

FDCPE_processor/data_registers/bus_width_loop[7].data_register_bit/rambit0: FDCPE port map (processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0),processor/data_registers/bus_width_loop[7].data_register_bit/rambit_D(0),clk,'0','0','1');
processor/data_registers/bus_width_loop[7].data_register_bit/rambit_D(0) <= ((processor/ALU_result(7) AND N_PZ_731)
	OR (
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND NOT N_PZ_731));

FDCPE_processor/data_registers/bus_width_loop[7].data_register_bit/rambit7: FDCPE port map (processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7),processor/data_registers/bus_width_loop[7].data_register_bit/rambit_D(7),clk,'0','0','1');
processor/data_registers/bus_width_loop[7].data_register_bit/rambit_D(7) <= ((
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND NOT N_PZ_732)
	OR (processor/ALU_result(7) AND N_PZ_732));

FDCPE_processor/internal_reset: FDCPE port map (processor/internal_reset,processor/internal_reset_D,clk,'0','0','1');
processor/internal_reset_D <= NOT ((NOT reset AND NOT processor/basic_control/reset_delay1));

FDCPE_processor/logical_result0: FDCPE port map (processor/logical_result(0),processor/logical_result_D(0),clk,'0','0','1');
processor/logical_result_D(0) <= ((NOT instruction(11) AND N_PZ_725)
	OR (instruction(0) AND NOT instruction(12) AND NOT N_PZ_730)
	OR (
	processor/data_registers/bus_width_loop[0].data_register_bit/rambit(0) AND instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[0].data_register_bit/rambit(7))
	OR (
	NOT processor/data_registers/bus_width_loop[0].data_register_bit/rambit(0) AND instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[0].data_register_bit/rambit(7)));

FDCPE_processor/logical_result1: FDCPE port map (processor/logical_result(1),processor/logical_result_D(1),clk,'0','0','1');
processor/logical_result_D(1) <= ((instruction(12) AND 
	processor/arithmetic_group/add_sub_module/half_addsub(1))
	OR (instruction(12) AND NOT instruction(11) AND 
	processor/data_registers/bus_width_loop[1].data_register_bit/rambit(0)));

FDCPE_processor/logical_result2: FDCPE port map (processor/logical_result(2),processor/logical_result_D(2),clk,'0','0','1');
processor/logical_result_D(2) <= ((instruction(13) AND NOT instruction(12) AND 
	NOT instruction(11))
	OR (instruction(13) AND NOT instruction(12) AND N_PZ_828)
	OR (instruction(12) AND NOT instruction(11) AND 
	processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[2].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[2].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[2].data_register_bit/rambit(0)));

FDCPE_processor/logical_result3: FDCPE port map (processor/logical_result(3),processor/logical_result_D(3),clk,'0','0','1');
processor/logical_result_D(3) <= ((instruction(12) AND NOT instruction(11) AND 
	processor/data_registers/bus_width_loop[3].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND N_PZ_831));

FDCPE_processor/logical_result4: FDCPE port map (processor/logical_result(4),processor/logical_result_D(4),clk,'0','0','1');
processor/logical_result_D(4) <= ((instruction(12) AND NOT instruction(11) AND 
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[4].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[4].data_register_bit/rambit(0)));

FDCPE_processor/logical_result5: FDCPE port map (processor/logical_result(5),processor/logical_result_D(5),clk,'0','0','1');
processor/logical_result_D(5) <= ((instruction(12) AND NOT instruction(11) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0)));

FDCPE_processor/logical_result6: FDCPE port map (processor/logical_result(6),processor/logical_result_D(6),clk,'0','0','1');
processor/logical_result_D(6) <= ((instruction(12) AND NOT instruction(11) AND 
	processor/data_registers/bus_width_loop[6].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	processor/data_registers/bus_width_loop[6].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[6].data_register_bit/rambit(0))
	OR (instruction(12) AND instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[6].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[6].data_register_bit/rambit(0)));

FDCPE_processor/logical_result7: FDCPE port map (processor/logical_result(7),processor/logical_result_D(7),clk,'0','0','1');
processor/logical_result_D(7) <= ((instruction(12) AND NOT instruction(11) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0))
	OR (instruction(12) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND instruction(10))
	OR (instruction(12) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND 
	processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND instruction(10)));

FDCPE_processor/reg_and_flag_enables/arith_or_logical_valid: FDCPE port map (processor/reg_and_flag_enables/arith_or_logical_valid,NOT instruction(15),clk,'0','0','1');

FDCPE_processor/reg_and_flag_enables/register_write_valid: FDCPE port map (processor/reg_and_flag_enables/register_write_valid,processor/reg_and_flag_enables/register_write_valid_D,clk,'0','0','1');
processor/reg_and_flag_enables/register_write_valid_D <= NOT (((instruction(15) AND instruction(12))
	OR (instruction(15) AND instruction(11))));

FDCPE_processor/reg_and_flag_enables/returni_or_shift_valid: FDCPE port map (processor/reg_and_flag_enables/returni_or_shift_valid,processor/reg_and_flag_enables/returni_or_shift_valid_D,clk,'0','0','1');
processor/reg_and_flag_enables/returni_or_shift_valid_D <= (instruction(13) AND instruction(15) AND 
	NOT instruction(12) AND NOT instruction(11));

FDCPE_processor/shift_and_rotate_carry: FDCPE port map (processor/shift_and_rotate_carry,processor/shift_and_rotate_carry_D,clk,'0','0','1');
processor/shift_and_rotate_carry_D <= NOT (((
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND instruction(10))
	OR (
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND NOT instruction(10))));

FDCPE_processor/shift_and_rotate_result0: FDCPE port map (processor/shift_and_rotate_result(0),processor/shift_and_rotate_result_D(0),clk,'0','0','1');
processor/shift_and_rotate_result_D(0) <= NOT (((NOT instruction(13) AND NOT processor/carry_flag)
	OR (instruction(13) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(7) AND instruction(10))
	OR (instruction(13) AND 
	NOT processor/data_registers/bus_width_loop[7].data_register_bit/rambit(0) AND NOT instruction(10))));

FDCPE_processor/shift_and_rotate_result1: FDCPE port map (processor/shift_and_rotate_result(1),NOT N_PZ_730,clk,'0','0','1');

FDCPE_processor/shift_and_rotate_result2: FDCPE port map (processor/shift_and_rotate_result(2),processor/shift_and_rotate_result_D(2),clk,'0','0','1');
processor/shift_and_rotate_result_D(2) <= NOT (((instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[1].data_register_bit/rambit(7))
	OR (NOT instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[1].data_register_bit/rambit(0))));

FDCPE_processor/shift_and_rotate_result3: FDCPE port map (processor/shift_and_rotate_result(3),N_PZ_828,clk,'0','0','1');

FDCPE_processor/shift_and_rotate_result4: FDCPE port map (processor/shift_and_rotate_result(4),NOT N_PZ_872,clk,'0','0','1');

FDCPE_processor/shift_and_rotate_result5: FDCPE port map (processor/shift_and_rotate_result(5),NOT N_PZ_844,clk,'0','0','1');

FDCPE_processor/shift_and_rotate_result6: FDCPE port map (processor/shift_and_rotate_result(6),processor/shift_and_rotate_result_D(6),clk,'0','0','1');
processor/shift_and_rotate_result_D(6) <= NOT (((instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(7))
	OR (NOT instruction(10) AND 
	NOT processor/data_registers/bus_width_loop[5].data_register_bit/rambit(0))));

FDCPE_processor/shift_and_rotate_result7: FDCPE port map (processor/shift_and_rotate_result(7),NOT N_PZ_877,clk,'0','0','1');

FDCPE_write_strobe: FDCPE port map (write_strobe,write_strobe_D,clk,'0','0','1');
write_strobe_D <= (NOT instruction(13) AND NOT processor/internal_reset AND 
	NOT processor/T_state AND instruction(15) AND NOT instruction(12) AND 
	instruction(11));


Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FDDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 FTDCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc2c64a-5-VQ100
Optimization Method                         : DENSITY
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Set Unused I/O Pin Termination              : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Enable Input Registers                      : ON
Function Block Fan-in Limit                 : 38
Use DATA_GATE Attribute                     : ON
Set Tristate Outputs to Termination Mode    : KEEPER
Default Voltage Standard for All Outputs    : LVCMOS18
Input Limit                                 : 32
Pterm Limit                                 : 28
